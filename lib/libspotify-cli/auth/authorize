#!/bin/bash
# vim: ft=bash ts=2 sw=2 et ff=unix fenc=utf-8

# Part of Spotify-cli
# Authorization Code Flow with Proof Key for Code Exchange (PKCE)

set -eu

##### Load libraries
_CURDIR="$(cd $(dirname $0) ; pwd)"
LIBSPDIR=${LIBSPDIR:="${_CURDIR}/.."}     # (Caution) varies according to _CURDIR
CONFDIR=${CONFIDR:="${LIBSPDIR}/config"}
source ${CONFDIR}/basic_settings

##### API
URLBASE="https://accounts.spotify.com"
API="authorize"

##### Processing body
function get_verifier {
  dd bs=64 count=1 if=/dev/urandom 2>/dev/null \
    | base64 -w 1024 \
    | sed -e 's/+/-/g;' -e 's/\//_/g' -e 's/=//g'
}

function get_challenge {
  printf "${CODE_VERIFIER}" \
    | openssl sha256 -binary \
    | base64 -w 1024 \
    | sed -e 's/+/-/g;' -e 's/\//_/g' -e 's/=//g'
}

function get_state {
  dd bs=64 count=1 if=/dev/urandom 2>/dev/null \
    | sha256sum \
    | cut -c-12
}

RESPONSE_TYPE=code
SCOPE="${SCOPE_ALL}"
CODE_CHALLENGE_METHOD="S256"
CODE_VERIFIER=$(get_verifier)
CODE_CHALLENGE=$(get_challenge)
STATE=$(get_state)

printf "${CODE_VERIFIER}" > ${CONFDIR}/code_verifier
printf "${CODE_CHALLENGE}" > ${CONFDIR}/code_challenge
printf "${STATE}" > ${CONFDIR}/state

# curl ${1:-} -s -k -G \
#   -i \
#   -H "${HEADER_ALWAYS}" \
#   --data-urlencode "client_id=${CLIENT_ID}" \
#   --data-urlencode "response_type=${RESPONSE_TYPE}" \
#   --data-urlencode "redirect_uri=${REDIRECT_URI}" \
#   --data-urlencode "code_challenge_method=${CODE_CHALLENGE_METHOD}" \
#   --data-urlencode "code_challenge=${CODE_CHALLENGE}" \
#   --data-urlencode "state=${STATE}" \
#   --data-urlencode "scope=${SCOPE}" \
#   "${URLBASE}/${API}"
#
# exit 16

# Invoke webserver for callback
while [ -z ${SERVER_PID:=$(lsof -t -i:${REDIRECT_PORT} || true)} ]
do
  ${AUTHDIR}/callback/php/invoke_server.sh ${REDIRECT_PORT} "${AUTHDIR}/callback/php" &> /dev/null
  sleep 2
done

RESPONSE=$(curl ${1:-} -s -k -G -o /dev/null \
  --write-out '%{http_code} %{size_header} %{redirect_url}' \
  --header "${HEADER_ALWAYS}" \
  --data-urlencode "client_id=${CLIENT_ID}" \
  --data-urlencode "response_type=${RESPONSE_TYPE}" \
  --data-urlencode "redirect_uri=${REDIRECT_URI}" \
  --data-urlencode "code_challenge_method=${CODE_CHALLENGE_METHOD}" \
  --data-urlencode "code_challenge=${CODE_CHALLENGE}" \
  --data-urlencode "state=${STATE}" \
  --data-urlencode "scope=${SCOPE}" \
  "${URLBASE}/${API}"
)

read -r HTTP_CODE SIZE_HEADER REDIRECT_URL <<< "${RESPONSE}"

# Error check
if [ $(IS_HTTP_REDIRECT "${HTTP_CODE}") = "${S_FALSE}" ]; then
  #echo "Something wrong!(HTTP Status Code: ${HTTP_CODE})"
  echo "${R_PREFIX}:${R_FAIL}:${HTTP_CODE}"
  exit ${HTTP_CODE}
fi 1>&2

# Normal output
if [ -z "${URL_OPENER}" ]; then
  echo "${REDIRECT_URL}"
else
  ${URL_OPENER} ${REDIRECT_URL}
fi

echo "${R_PREFIX}:${R_SUCCESS}:${HTTP_CODE}" 1>&2
exit 0

